apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-zookeeper
spec:
  capacity: 
    storage: 1Gi
  # ReadWriteOnce – the volume can be mounted as read-write by a single node
  # ReadOnlyMany – the volume can be mounted read-only by many nodes
  # ReadWriteMany – the volume can be mounted as read-write by many nodes

  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  # “Retain”, “Recycle”, and “Delete”.
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /tmp/pv-zookeeper 
---
# The zk-hs Service creates a domain for all of the Pods:
#
# zk-0.zk-hs.default.svc.cluster.local
# zk-1.zk-hs.default.svc.cluster.local
# zk-2.zk-hs.default.svc.cluster.local
apiVersion: v1
kind: Service
metadata:
  name: zk-hs
  labels:
    app: zk
spec:
  ports:
  # followers use to connect to the leader,
  - port: 2888
    name: server
  #  and the second is for leader election
  - port: 3888
    name: leader-election
  # headless - the DNS server will return the pod IPs instead of the single service IP.
  clusterIP: None
  selector:
    app: zk
---
apiVersion: v1
kind: Service
metadata:
  name: zk-chs
  labels:
    app: zk
spec:
  ports:
  # the port to listen for client connections; that is, the port that clients attempt to connect to
  - port: 2181
    name: client
  clusterIP: None
  selector:
    app: zk
---
#kind: PodDisruptionBudget
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zk
spec:
  selector:
    matchLabels:
      app: zk
  serviceName: zk-hs
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  # allows you to relax its ordering guarantees while preserving its uniqueness and identity
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: zk
    spec:
      containers:
      - name: kubernetes-zookeeper
        imagePullPolicy: IfNotPresent #Always
        image: "k8s.gcr.io/kubernetes-zookeeper:1.0-3.4.10"
        resources:
          requests:
            memory: "254Mi"
            cpu: "0.2"
        ports:
        - containerPort: 2181
          name: client
        - containerPort: 2888
          name: server
        - containerPort: 3888
          name: leader-election
        command:
        - sh
        - -c
        - "start-zookeeper \
          --servers=3 \
          --data_dir=/var/lib/zookeeper/data \
          --data_log_dir=/var/lib/zookeeper/data/log \
          --conf_dir=/opt/zookeeper/conf \
          --client_port=2181 \
          --election_port=3888 \
          --server_port=2888 \
          --tick_time=2000 \
          --init_limit=10 \
          --sync_limit=5 \
          --heap=64M \
          --max_client_cnxns=60 \
          --snap_retain_count=3 \
          --purge_interval=12 \
          --max_session_timeout=40000 \
          --min_session_timeout=4000 \
          --log_level=INFO"
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "zookeeper-ready 2181"
          initialDelaySeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/zookeeper
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Mi
